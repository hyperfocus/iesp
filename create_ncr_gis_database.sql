CREATE DATABASE "ncr-gis";

-- Then switch to the new database

CREATE EXTENSION postgis;

CREATE SCHEMA ncr AUTHORIZATION ncr;

SET search_path =  'ncr-gis', ncr, public;

SET statement_timeout = 5000;

CREATE TABLE version (
	"db_name" character varying DEFAULT 'ncr-gis' NOT NULL,
	"db_version" character varying DEFAULT 'unknown' NOT NULL,
	"db_version_date" timestamp with time zone,
	"db_install_date" timestamp with time zone DEFAULT now(),
	"db_change_summary" character varying
);

CREATE TABLE build_run (
	"id" bigserial NOT NULL PRIMARY KEY,
	"build_number" character varying NOT NULL,
	"test_run_number" bigint NOT NULL
);

CREATE TABLE source_xml (
	"source_xml_id" char(64) NOT NULL PRIMARY KEY,
	"text" text
);

CREATE TABLE artcc (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"name" character varying
);

CREATE TABLE airport (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"airport_site_number" integer,
	"type" character varying,
	"designator" character varying,
	"faa_region_code" character varying,
	"faa_district_code" character varying,
	"administrative_area" character varying,
	"state_name" character varying,
	"county_name" character varying,
	"post_office_code" character varying,
	"served_city" character varying,
	"name" character varying,
	"boundary_artcc_designator" character varying,
	"boundary_artcc_name" character varying,
	"responsible_artcc_designator" character varying,
	"responsible_artcc_name" character varying,
	"designated_as_intl_apt_of_entry" boolean,
	"designated_as_landing_airport" boolean,
	"control_type" character varying,
	"grants_military_landing" boolean,
	"traffic_control_tower_on_airport" boolean
);

CREATE TABLE runway (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"end1_name" character varying,
	"end1_geom" geometry(Geometry,4326),
	"end2_name" character varying,
	"end2_geom" geometry(Geometry,4326),
	"airport_id" bigint NOT NULL,
	FOREIGN KEY ("airport_id") REFERENCES airport(id),
	"airport_name" character varying,
	"length" integer,
	"width" integer
);

CREATE TABLE navaid (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"designator" character varying,
	"facility_type" character varying,
	"name" character varying,
	"city" character varying,
	"state" character varying,
	"postal_code" character varying,
	"faa_region" character varying,
	"country" character varying,
	"common_system_usage" character varying,
	"navaid_public_use" boolean,
	"navaid_class" character varying,
	"high_artcc_name" character varying,
	"low_artcc_name" character varying
);

CREATE TABLE airway (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"type" character varying,
	"min_obstacle_clearance_altitude" integer,
	"min_enroute_altitude" integer,
	"name" character varying
);

CREATE TABLE fix (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"name" character varying
);

CREATE TABLE rvr (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"seq_number" integer,
	"tracon" character varying,
	"airport" character varying,
	"link" text,
	"runway_id" text,
	"runway_numeric_id" integer,
	"runway_orientation" character varying,
	"visual_range_touchdown" character varying,
	"touchdown_trend" character varying,
	"visual_range_midpoint" character varying,
	"midpoint_trend" character varying,
	"visual_range_rollout" character varying,
	"rollout_trend" character varying,
	"runway_edge_light_setting" character varying,
	"runway_center_light_setting" character varying
);

CREATE TABLE rvr_status (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"seq_number" integer,
	"tracon" character varying,
	"airport" character varying,
	"service_status" character varying,
	"link_name" character varying,
	"link_status" character varying,
	"link_mode" character varying,
	"connection_name" character varying,
	"connection_status" character varying,
	"connection_state" character varying,
	"connection_mode" character varying
);

CREATE TABLE gdp (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"status" text,
	"airport" character varying,
	"artcc" character varying,
	"delay_asgn_to_facility" text,
	"adl_time" timestamp with time zone,
	"delay_asgn_mode" text,
	"cumulative_start_time" timestamp with time zone,
	"cumulative_end_time" timestamp with time zone,
	"departure_airports_included" text,
	"departure_centers_included" text,
	"departure_airports_exempted" text,
	"departure_centers_exempted" text,
	"ac_types" text,
	"scope_mileage" decimal,
	"scope_centers" text,
	"exempt_afps" text,
	"exempt_ctops" text,
	"delay_limit" decimal,
	"delay_max" decimal,
	"delay_avg" decimal,
	"condition" text,
	"adv_start_time" timestamp with time zone,
	"adv_end_time" timestamp with time zone,
	"num_compressions" integer,
	"last_compression_time" timestamp with time zone,
	"num_blankets" integer,
	"last_blanket_time" timestamp with time zone
);

CREATE TABLE gs (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"status" text,
	"current_avg_delay" decimal,
	"current_max_delay" decimal,
	"current_total_delay" decimal,
	"anticipated_avg_delay" decimal,
	"anticipated_max_delay" decimal,
	"anticipated_total_delay" decimal,
	"airport" character varying,
	"artcc" character varying,
	"adl_time" timestamp with time zone,
	"cumulative_start_time" timestamp with time zone,
	"cumulative_end_time" timestamp with time zone,
	"departure_airports_included" text,
	"departure_centers_included" text,
	"departure_airports_exempted" text,
	"departure_centers_exempted" text,
	"ac_types" text,
	"condition" text,
	"adv_start_time" timestamp with time zone,
	"adv_end_time" timestamp with time zone
);

CREATE TABLE afp (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"status" text,
	"name" character varying,
	"element_type" text,
	"adl_time" timestamp with time zone,
	"delay_asgn_mode" text,
	"override" text,
	"cml_start_time" timestamp with time zone,
	"cml_end_time" timestamp with time zone,
	"keyword" character varying,
	"centers" text,
	"departure_airports_included" text,
	"departure_centers_included" text,
	"departure_airports_exempted" text,
	"departure_centers_exempted" text,
	"arrival_airports_exempted" text,
	"arrival_centers_exempted" text,
	"delay_limit" decimal,
	"delay_max" decimal,
	"delay_avg" decimal,
	"condition" text,
	"adv_start_time" timestamp with time zone,
	"adv_end_time" timestamp with time zone,
	"num_compressions" integer,
	"last_compression_time" timestamp with time zone
);

CREATE TABLE ctop (
	"id" bigserial NOT NULL PRIMARY KEY,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"issue_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"name" character varying,
	"ctop_id" text,
	"rank" integer,
	"status" text,
	"suspended" boolean,
	"interval" integer,
	"auto_revision" boolean,
	"smooth_factor" double precision,
	"pop_delay_limit" integer,
	"fca_names" text
);

CREATE TABLE fxa (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"fxa_id" text,
	"name" text,
	"domain" text,
	"tmi_status" text,
	"upd_workstation_id" text,
	"upd_site_id" text,
	"create_workstation_id" text,
	"create_site_id" text,
	"shared_sites" text,
	"reason" text,
	"type" text,
	"color_id" integer,
	"extended_fea_flag" boolean,
	"look_ahead" decimal,
	"fsm_eligible" boolean,
	"direction" decimal,
	"speed" decimal,
	"nas_apt" text,
	"nas_sector" text,
	"nas_bas_sector" text,
	"nas_tracon" text,
	"nas_bas_tracon" text,
	"nas_artcc" text,
	"nas_fix" text,
	"nas_sua" text
);

CREATE TABLE reroute (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reroute_id" text,
	"name" text,
	"reroute_status" text,
	"tmi_id" character varying,
	"tmi_status" character varying,
	"last_updated_time" timestamp with time zone,
	"orig_creation_time" timestamp with time zone,
	"site" character varying,
	"airborne" text,
	"apply_protected_segments" boolean,
	"flight_selection_time_type" text,
	"fca_name" text,
	"previous_tmi_id" text,
	"advisory_num" integer,
	"advisory_signature_time" timestamp with time zone,
	"advisory_type" text,
	"advisory_category" text,
	"advisory_action" character varying,
	"constrained_area" text,
	"reason" text,
	"include_traffic" text,
	"facility" character varying,
	"extension_probability" character varying,
	"remarks" text,
	"associated_restrictions" text,
	"modifications" text,
	"advisory_text" text,
	"include_mit" boolean,
	"restriction_designator" text,
	"miles_in_trail" decimal,
	"mit_apply_to_flights" text,
	"mit_time_type" character varying,
	"mit_fix" character varying,
	"mit_fca" character varying
);

CREATE TABLE aptc (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"facility" character varying,
	"airport" character varying,
	"arrival_runway_config" character varying,
	"dept_runway_config" character varying,
	"arrival_rate" integer,
	"dept_rate" integer,
	"flight_conditions" character varying,
	"strategic_aar" integer,
	"arrival_rate_change_reason" character varying,
	"dyn_aar_on_panel" boolean,
	"adr_on_panel" boolean,
	"airport_in_file" boolean,
	"arr_user_specified" boolean,
	"dep_user_specified" boolean,
	"entering_facility" character varying,
	"remarks" text
);

CREATE TABLE dice (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"airport" character varying,
	"remarks" text
);

CREATE TABLE mit (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE minit (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE apreq (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE stop (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE tbm (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE dsp (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE text (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"reporting_facility" character varying,
	"action" character varying,
	"restriction_name" text,
	"nas_elements" text,
	"airport" character varying,
	"engine_type" character varying,
	"restriction_type" character varying,
	"altitude_restricted" boolean,
	"speed_restricted" boolean,
	"severe_weather" boolean,
	"requestor_type" character varying,
	"provider_type" character varying,
	"mit_distance" decimal,
	"minit_spacing" decimal,
	"speed" decimal,
	"reason" text,
	"qualifier" text,
	"passback" boolean,
	"exclusions" text,
	"approval_time" timestamp with time zone,
	"provider_status" character varying,
	"remarks" text,
	"provider_facility" text,
	"modified_restriction_name" text
);

CREATE TABLE saa (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"sequence_number" integer,
	"correction_number" integer,
	"feature_start_time" timestamp with time zone,
	"feature_end_time" timestamp with time zone,
	"type" character varying,
	"designator" text,
	"name" text,
	"available_via_notam" boolean,
	"activity" text,
	"activation_status" text,
	"notam_time_in_advance" decimal,
	"legal_definition" text,
	"condition_exclusion" text,
	"sua_type" character varying,
	"saa_type" character varying,
	"adminstrative_area" text,
	"legal_definition_type" text,
	"reservation_id" text,
	"reservation_phase" text,
	"live_fire" text,
	"lights_out" text
);

CREATE TABLE saa_schedule (
	"saa_id" bigint NOT NULL,
	FOREIGN KEY ("saa_id") REFERENCES saa(id),
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL
);

CREATE TABLE notam (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"event_id" text,
	"sequence_number" integer,
	"correction_number" integer,
	"scenario" integer,
	"series" character varying,
	"number" integer,
	"type" character varying,
	"affected_fir" character varying,
	"selection_code" character varying,
	"traffic" character varying,
	"purpose" character varying,
	"scope" character varying,
	"coordinates" text,
	"radius" decimal,
	"location" character varying,
	"text" text,
	"local_formatted_text" text,
	"icao_formatted_text" text,
	"classification" character varying,
	"account_id" character varying,
	"airport_name" text,
	"origin_id" character varying,
	"icao_location" character varying,
	"last_updated_time" timestamp with time zone,
	"cancel_time" timestamp with time zone,
	"saa_designator" text
);

CREATE TABLE metar (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"obs_gml_id" character varying,
	"permissable_usage" character varying,
	"status" character varying,
	"designator" character varying,
	"automated_station" boolean,
	"cloud_visibility_ok" boolean,
	"air_temp" double precision,
	"dew_point" double precision,
	"qnh" double precision,
	"variable_wind_direction" boolean,
	"wind_direction" double precision,
	"wind_direction_range_end1" double precision,
	"wind_direction_range_end2" double precision,
	"wind_speed" double precision,
	"wind_gust_speed" double precision,
	"horizontal_visibility" double precision,
	"visibility_operator" character varying,
	"present_weather" character varying,
	"rvr_past_tendency" character varying,
	"rvr_designator" character varying,
	"rvr_value" character varying,
	"vertical_visibility" double precision,
	"cloud_amount" character varying,
	"cloud_base" character varying,
	"cloud_type" character varying,
	"lightning_location_range_end1" double precision,
	"lightning_location_range_end2" double precision,
	"lightning_distance" character varying,
	"observing_system_type" character varying,
	"original_tac" character varying
);

CREATE TABLE taf (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"status" character varying,
	"entire_start_time" timestamp with time zone,
	"entire_end_time" timestamp with time zone,
	"designator" character varying,
	"obs_gml_id" character varying,
	"cloud_visibility_ok" boolean,
	"change_indicator" character varying,
	"prevailing_visibility" decimal,
	"prevailing_visibility_operator" character varying,
	"variable_wind_direction" boolean,
	"surface_wind_direction" decimal,
	"surface_wind_speed" decimal,
	"weather" text,
	"cloud_amount" character varying,
	"cloud_base" character varying,
	"original_tac" character varying
);

CREATE TABLE airmet (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"permissable_usage" character varying,
	"status" character varying,
	"issuing_designator" character varying,
	"originating_designator" character varying,
	"sequence" character varying,
	"cancelled_sequence" character varying,
	"phenomenon" character varying,
	"spatial_feaure_type" character varying,
	"airmet_collection_id" character varying,
	"time_indicator" character varying,
	"airmet_member_id" character varying,
	"intensity_change" character varying,
	"approximate_location" boolean,
	"direction_of_motion" double precision,
	"speed_of_motion" double precision,
	"cloud_base" double precision,
	"cloud_top" double precision,
	"surface_visability" double precision,
	"surface_visability_cause" character varying,
	"surface_wind_direction" double precision,
	"surface_wind_speed" double precision,
	"original_tac" character varying
);

CREATE TABLE g_airmet (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"product_description" character varying,
	"forecast_area" character varying,
	"airmet_record_id" character varying,
	"message_status" character varying,
	"record_status" character varying,
	"hazard_type" character varying,
	"is_outlook" boolean,
	"ifr_clouds" boolean,
	"ifr_wx_phenomenon" character varying,
	"mountain_obscuration_clouds" boolean,
	"mountain_obscuration_wx_phenomenon" character varying,
	"turbulence_range" character varying,
	"surface_wind_speed_greater_than" double precision,
	"low_level_wind_shear" boolean,
	"icing_range" character varying,
	"freezing_level_upper_limit" boolean,
	"freezing_level_lower_limit" boolean,
	"freezing_level_upper_value" double precision,
	"freezing_level_lower_value" double precision,
	"freezing_multiple_levels" boolean
);

CREATE TABLE sigmet (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"permissable_usage" character varying,
	"status" character varying,
	"issuing_designator" character varying,
	"originating_designator" character varying,
	"sequence" character varying,
	"cancelled_sequence" character varying,
	"volcanic_ash_fir" character varying,
	"phenomenon" character varying,
	"analysis_or_forecast" character varying,
	"spatial_feaure_type" character varying,
	"sigmet_collection_id" character varying,
	"time_indicator" character varying,
	"sigmet_member_id" character varying,
	"intensity_change" character varying,
	"approximate_location" boolean,
	"direction_of_motion" double precision,
	"speed_of_motion" double precision,
	"tropical_cyclone_name" character varying,
	"volcanic_ash_volcano_name" character varying,
	"original_tac" character varying
);

CREATE TABLE pirep (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"obs_gml_id" character varying,
	"flight_level_unknown" boolean,
	"remarks" character varying,
	"temperature" decimal,
	"icing_in_cloud" boolean,
	"icing_category" character varying,
	"icing_range_start" character varying,
	"icing_range_end" character varying,
	"icing_lower_limit" decimal,
	"icing_upper_limit" decimal,
	"nonconvective_type" character varying,
	"convective_type" character varying,
	"cloud_amount" character varying,
	"cloud_lower_limit" decimal,
	"cloud_upper_limit" decimal,
	"turb_in_cloud" boolean,
	"turb_frequency" character varying,
	"turb_category" character varying,
	"turb_range_start" character varying,
	"turb_range_end" character varying,
	"turb_lower_limit" decimal,
	"turb_upper_limit" decimal,
	"aircraft_reference" character varying,
	"phase_of_flight" character varying,
	"report_type" character varying,
	"location" character varying,
	"encoder_site" character varying,
	"original_tac" character varying
);

CREATE TABLE tcf (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"automated" boolean,
	"issuing_name" character varying,
	"issuing_type" character varying,
	"issuing_designator" character varying,
	"cycle_time" timestamp with time zone,
	"maximum_top" character varying,
	"polygon_coverage" character varying,
	"line_coverage" character varying,
	"confidence" character varying,
	"thunderstorm_probability" character varying,
	"direction_of_motion" decimal,
	"speed_of_motion" decimal,
	"original_tac" character varying
);

CREATE TABLE winds_aloft (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"location_identifier" character varying,
	"wind_direction" decimal,
	"wind_speed" decimal,
	"temperature" decimal
);

CREATE TABLE awos (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"name" character varying NOT NULL,
	"survey_method" character varying,
	"city" character varying,
	"state" character varying,
	"sensor_type" character varying,
	"commissioning_state" character varying,
	"navaid_flag" character varying
);

CREATE TABLE cwa (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"status" character varying,
	"result_time" timestamp with time zone,
	"center_name" character varying,
	"center_type" character varying,
	"center_designator" character varying,
	"issue_sequence" integer,
	"observed_property" character varying,
	"cwa_statement" text
);

CREATE TABLE svr (
	"id" bigserial NOT NULL PRIMARY KEY,
	"issue_time" timestamp with time zone NOT NULL,
	"start_time" timestamp with time zone NOT NULL,
	"end_time" timestamp with time zone NOT NULL,
	"expiration_time" timestamp with time zone NOT NULL,
	"min_altitude" decimal,
	"max_altitude" decimal,
	"geom" geometry(Geometry,4326),
	"source_xml_id" char(64),
	FOREIGN KEY ("source_xml_id") REFERENCES source_xml(source_xml_id),
	"global_id" text,
	"life_cycle_state" character varying,
	"event_tracking_number" integer,
	"phenomenon_time" timestamp with time zone,
	"issuing_wfo_name" character varying,
	"issuing_wfo_id" character varying,
	"type" character varying,
	"observed_property" character varying,
	"rationale" text,
	"call_to_action" text,
	"time_of_position" timestamp with time zone,
	"motion_geom" geometry(Geometry,4326),
	"motion_direction" decimal,
	"motion_speed" decimal,
	"forecaster_id" character varying
);



CREATE OR REPLACE VIEW active_saa AS
    SELECT saa.id,
        CASE
            WHEN saa_schedule.issue_time IS NOT NULL THEN saa_schedule.issue_time
            ELSE saa.issue_time
        END AS issue_time,
        CASE
            WHEN saa_schedule.start_time IS NOT NULL THEN saa_schedule.start_time
            ELSE saa.start_time
        END AS start_time,
        CASE
            WHEN saa_schedule.end_time IS NOT NULL THEN saa_schedule.end_time
            ELSE saa.end_time
        END AS end_time,
        CASE
            WHEN saa_schedule.expiration_time IS NOT NULL THEN saa_schedule.expiration_time
            ELSE saa.expiration_time
        END AS expiration_time,
        saa.min_altitude,
        saa.max_altitude,
        saa.geom,
        saa.source_xml_id,
        saa.global_id,
        saa.sequence_number,
        saa.correction_number,
        saa.feature_start_time,
        saa.feature_end_time,
        saa.type,
        saa.designator,
        saa.name,
        saa.available_via_notam,
        saa.activity,
        saa.activation_status,
        saa.notam_time_in_advance,
        saa.legal_definition,
        saa.condition_exclusion,
        saa.sua_type,
        saa.saa_type,
        saa.adminstrative_area,
        saa.legal_definition_type,
        saa.reservation_id,
        saa.reservation_phase,
        saa.live_fire,
        saa.lights_out,
        NULL::char(64) AS activating_xml_id
    FROM saa_schedule LEFT JOIN saa ON saa.id = saa_schedule.saa_id
    UNION
    SELECT saa.id,
        notam.issue_time,
        notam.start_time,
        notam.end_time,
        notam.expiration_time,
        saa.min_altitude,
        saa.max_altitude,
        saa.geom,
        saa.source_xml_id,
        saa.global_id,
        saa.sequence_number,
        saa.correction_number,
        saa.feature_start_time,
        saa.feature_end_time,
        saa.type,
        saa.designator,
        saa.name,
        saa.available_via_notam,
        saa.activity,
        saa.activation_status,
        saa.notam_time_in_advance,
        saa.legal_definition,
        saa.condition_exclusion,
        saa.sua_type,
        saa.saa_type,
        saa.adminstrative_area,
        saa.legal_definition_type,
        saa.reservation_id,
        saa.reservation_phase,
        saa.live_fire,
        saa.lights_out,
        notam.source_xml_id AS activating_xml_id
    FROM notam, saa WHERE notam.saa_designator::text = saa.designator AND saa.available_via_notam = true;

INSERT INTO version (db_name,db_version,db_version_date,db_install_date,db_change_summary) 
	VALUES ('ncr-gis','5.31.2019','2019-05-31T12:42:10.759289',now(),'NCR-1665 setting 5 second timeout');
